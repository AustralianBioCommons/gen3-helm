# templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "ldap-sync.fullname" . }}
  labels:
    {{- include "ldap-sync.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cronjob.schedule }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "ldap-sync.labels" . | nindent 8 }}
        spec:
          serviceAccountName: {{- include "ldap-sync.serviceAccountName" . | nindent 8 }}
          volumes:
            - name: creds-volume
              secret:
                secretName: ldap-sync-creds
          containers:
            - name: {{ .Values.cronjob.jobName | default "gen3ldapsync" }}
              image: "{{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag }}"
              env:
              - name: slackWebHook
                value: {{ .Values.ldap-sync.slack_webhook | quote }}
              {{- toYaml .Values.env | nindent 12 }}
              volumeMounts:
              - name: "creds-volume"
                readOnly: true
                mountPath: "/app/ldap-sync-creds"
          initContainers:
            - name: wait-for-fence
              image: curlimages/curl:latest
              command: ["/bin/sh","-c"]
              args: ["while [ $(curl -sw '%{http_code}' http://fence-service -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for fence...'; done"]           
          restartPolicy: Never
