apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "ldapsync.fullname" . }}
  labels:
    app: gen3ldapsync
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gen3ldapsync-job
        spec:
          serviceAccountName: ldap-sync-job
          volumes:
            - name: cred-volume
              secret: 
                secretName: "aws-config-fence"
          initContainers:
            - name: wait-for-fence
              image: curlimages/curl:latest
              command: ["/bin/sh","-c"]
              args: ["while [ $(curl -sw '%{http_code}' http://fence-service -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for fence...'; done"] 
          containers:
            - name: {{ .Values.cronjob.jobName }}
              image: "{{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag }}"
              env:
                - name: LDAP_SERVER
                  value: {{ .Values.server }}
                - name: LDAP_USER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.ldapsynccreds.targetName }}
                      key: LDAP_USER
                - name: LDAP_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.ldapsynccreds.targetName }}
                      key: LDAP_PASSWORD
                - name: slackWebHook
                  value: {{ .Values.ldapsync.slack_webhook | quote }}
                - name: BUCKET
                  value: {{ .Values.cronjob.bucket | quote }}

              volumeMounts:
                - name: cred-volume
                  mountPath: "/home/ubuntu/.aws/credentials"
                  subPath: credentials
              command: ["/bin/bash" ]
              args:
                - "-c"
                # Script always succeeds if it runs (echo exits with 0)
                - |
                  set -x
                  pwd $home
                  python3 /app/transform_users.yaml.py --s3-bucket ${BUCKET} --ldap-server ${LDAP_SERVER}
                          
          restartPolicy: Never
